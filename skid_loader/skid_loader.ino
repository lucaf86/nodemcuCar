#include <ESP8266SSDP.h>

#include <Arduino.h>
#include "Arduino.h"
#include <ArduinoWebsockets.h>
#include <ESP8266WiFi.h>
#include <ESPAsyncWebServer.h>
#include <AsyncElegantOTA.h>
#include <ESP8266mDNS.h>
#include <ESP8266SSDP.h>
#include <StreamString.h>
#include <FS.h>
//#include <ESP8266WebServer.h>
//#include <ESP8266HTTPUpdateServer.h>

#define TRACELN Serial.println
#define TRACE Serial.print

#if 0
const uint8_t index_html_gz[] = {0x1f,0x8b,0x08,0x08,0x62,0x90,0x32,0x5f,
                                 0x00,0xff,0x69,0x6e,0x64,0x65,0x78,0x2e,
                                 0x68,0x74,0x6d,0x6c,0x2e,0x67,0x7a,0x00,
                                 0xbd,0x59,0x7d,0x53,0xdb,0x38,0xb7,0xff,
                                 0x7f,0x3f,0x85,0x9a,0xce,0x53,0x6c,0x70,
                                 0x1c,0x27,0x2c,0xbb,0xdd,0x14,0xc3,0xb4,
                                 0x40,0xb9,0xbd,0x43,0x77,0x19,0xc2,0x5d,
                                 0x60,0x9e,0xb9,0xc3,0x08,0x5b,0x49,0xdc,
                                 0x3a,0x96,0xc7,0x96,0x13,0xd8,0x96,0xef,
                                 0xbe,0x3f,0x49,0x7e,0x8b,0x23,0xa0,0x7b,
                                 0xe7,0x99,0x9b,0x99,0x24,0x96,0xce,0x8b,
                                 0xce,0x9b,0xce,0x39,0x92,0xf7,0x5f,0x1d,
                                 0xff,0x71,0x74,0x79,0x73,0x7e,0x42,0xe6,
                                 0x62,0x11,0x1f,0xfc,0xf4,0xd3,0xbe,0xfe,
                                 0x27,0xf8,0xec,0xcf,0x19,0x0d,0xf5,0xa3,
                                 0x1a,0x2e,0x98,0xa0,0x24,0xa1,0x0b,0xe6,
                                 0x6f,0x2d,0x23,0xb6,0x4a,0x79,0x26,0xb6,
                                 0x2a,0x20,0x09,0x78,0x22,0x58,0x22,0xfc,
                                 0xad,0x55,0x14,0x8a,0xb9,0x1f,0xb2,0x65,
                                 0x14,0xb0,0xbe,0x1a,0x38,0x35,0x52,0x94,
                                 0x44,0x22,0xa2,0x71,0x3f,0x0f,0x68,0xcc,
                                 0xfc,0xa1,0xeb,0x35,0xa0,0x22,0x67,0x99,
                                 0x9a,0xa7,0x77,0x00,0x25,0x7c,0x8b,0x0c,
                                 0xba,0x4b,0x07,0x73,0x9a,0xe5,0x4c,0xf8,
                                 0xbd,0x42,0x4c,0xfb,0x6f,0x7b,0x80,0x2b,
                                 0x84,0x06,0x4b,0x44,0x22,0x66,0x07,0xff,
                                 0xcd,0x1f,0x72,0x11,0x05,0x5f,0x89,0x60,
                                 0xb9,0xd8,0x1f,0xe8,0xc9,0x1a,0x69,0xf3,
                                 0x61,0x3f,0x17,0x0f,0x6d,0x8c,0xd7,0x52,
                                 0x15,0x1a,0x25,0x2c,0x23,0xdf,0xea,0x49,
                                 0xf5,0x51,0xda,0x8c,0xc9,0xd0,0xf3,0xfe,
                                 0xf5,0x6e,0x1d,0x32,0x67,0xd1,0x6c,0x2e,
                                 0xc6,0xe4,0xe7,0xdf,0x96,0xf3,0x0e,0xe8,
                                 0x8e,0x06,0x5f,0x67,0x19,0x2f,0x92,0xb0,
                                 0x1f,0xf0,0x98,0x67,0x63,0xf2,0x7a,0x77,
                                 0x77,0xb7,0x83,0x14,0x46,0x79,0x1a,0xd3,
                                 0x87,0x31,0x99,0xc6,0xec,0xbe,0x03,0xa3,
                                 0x71,0x34,0x4b,0xfa,0x91,0x60,0x8b,0x7c,
                                 0x4c,0x02,0xd8,0x98,0x65,0x1d,0x8c,0x2f,
                                 0x05,0x14,0x9e,0x3e,0x80,0xbf,0xf2,0xc1,
                                 0x13,0x58,0x7c,0xc9,0xb2,0x69,0xcc,0x57,
                                 0x63,0x32,0x8f,0xc2,0x90,0x25,0x5d,0x39,
                                 0x79,0x16,0xc2,0x05,0x19,0x0d,0xa3,0x02,
                                 0x0b,0xfd,0x9a,0x76,0xe5,0x10,0xbc,0x08,
                                 0xe6,0x7d,0x1a,0x88,0x88,0x27,0x63,0x92,
                                 0xf0,0x84,0x35,0x08,0x8f,0x0d,0xea,0x6b,
                                 0x29,0xe9,0xd3,0x96,0xdb,0x60,0x5b,0x99,
                                 0xce,0x04,0xdb,0xb4,0x5d,0x36,0xbb,0xb3,
                                 0x46,0x3f,0xef,0x39,0x64,0xb4,0x8b,0xe0,
                                 0xf9,0xed,0x37,0xdb,0xa8,0x85,0xe4,0x96,
                                 0xde,0x93,0x9c,0xc7,0x51,0x28,0x49,0xa8,
                                 0x35,0xdc,0xfd,0xc5,0x21,0xcd,0x8f,0xbb,
                                 0x67,0x26,0xac,0xd5,0xdf,0xdb,0x70,0xf1,
                                 0x73,0xea,0xb7,0x22,0x98,0xc5,0x2c,0x80,
                                 0x36,0xcf,0x9b,0x67,0x2c,0xd9,0x2c,0x59,
                                 0xd7,0x4a,0x46,0x75,0x21,0xfb,0x2f,0x6f,
                                 0xa1,0xef,0x50,0xfe,0x8c,0xa0,0x34,0xb6,
                                 0x8d,0xd7,0x92,0x7e,0x83,0xf7,0x5c,0x3a,
                                 0xba,0xcb,0x3a,0x28,0xb2,0x5c,0x32,0x4c,
                                 0x79,0x64,0x08,0x8d,0x52,0xf9,0xd2,0x4b,
                                 0xa3,0x35,0x47,0xb4,0xf9,0xd3,0x8c,0xd1,
                                 0x2e,0xe7,0x94,0xe7,0xd8,0xd4,0xd2,0x26,
                                 0xd3,0xe8,0x9e,0x85,0x1d,0xce,0x99,0x76,
                                 0xae,0xb7,0x61,0xcc,0x74,0x6d,0xf2,0x51,
                                 0x6f,0x65,0xb5,0x1d,0x07,0x9d,0xfd,0x68,
                                 0xda,0xb1,0x41,0x16,0xa5,0x82,0x88,0x87,
                                 0x94,0xf9,0x3d,0xc1,0xee,0xc5,0xe0,0x0b,
                                 0x5d,0x52,0x3d,0xdb,0x6b,0x28,0x97,0x34,
                                 0x23,0xc8,0x06,0x13,0x99,0x0d,0xfc,0x69,
                                 0x91,0x28,0xdf,0x59,0xc2,0x61,0xf6,0x37,
                                 0x09,0x8a,0xfc,0x25,0x47,0x7c,0x78,0xbe,
                                 0xef,0x5b,0xcc,0x67,0xdf,0xbf,0x7f,0x7b,
                                 0xb4,0x5d,0x95,0x2e,0x0e,0x7b,0x5f,0xca,
                                 0x24,0xd2,0x1b,0x33,0x3d,0xe5,0x24,0x0d,
                                 0x36,0x73,0x95,0xa5,0x0e,0x3d,0x00,0x75,
                                 0x86,0xe3,0x6d,0xa0,0x8e,0x68,0x05,0xd5,
                                 0x8f,0xce,0xbc,0x0d,0x56,0x0e,0x48,0x68,
                                 0xfc,0x31,0x8a,0xe3,0x23,0xe9,0xe6,0xc3,
                                 0xde,0x6b,0xcf,0x7b,0xff,0xde,0xf3,0xe4,
                                 0x62,0x1b,0x50,0x27,0x33,0x11,0x9f,0x21,
                                 0x3f,0x5d,0x29,0x21,0x46,0x2d,0xa2,0x7a,
                                 0xd6,0x09,0x4d,0x44,0x13,0x91,0xf1,0xaf,
                                 0xac,0x59,0x73,0x77,0x77,0x7d,0xcd,0x16,
                                 0xdc,0xa1,0x6d,0x06,0xb0,0xb0,0x61,0xd5,
                                 0x8d,0x59,0x27,0x36,0x11,0x75,0x57,0x7d,
                                 0xeb,0xe9,0x55,0x0d,0x70,0x27,0xf0,0x43,
                                 0x1e,0x14,0x0b,0xa4,0x2f,0x77,0xc6,0xc4,
                                 0x49,0xcc,0xe4,0xe3,0x87,0x87,0x4f,0xa1,
                                 0x25,0x6c,0xa7,0x68,0x80,0x01,0x02,0x51,
                                 0xb0,0x12,0x6e,0xf5,0x02,0x9a,0xc0,0xfd,
                                 0x3d,0xfb,0x5d,0xe1,0x46,0xa1,0x1f,0x39,
                                 0x10,0x20,0x79,0xf3,0xc6,0x4a,0xfc,0xc0,
                                 0x0d,0xe2,0x08,0x28,0x4a,0x3c,0x5b,0xce,
                                 0x73,0xcc,0xf3,0x7a,0xfe,0xbf,0x94,0x7f,
                                 0xc0,0x5a,0xfb,0xd1,0x4f,0xf0,0xa4,0x7d,
                                 0xe6,0x73,0x27,0x70,0x69,0x9a,0xb2,0x24,
                                 0x3c,0x9a,0x47,0x71,0x68,0x15,0xf6,0x3b,
                                 0x19,0x34,0xb9,0x5f,0x48,0xd1,0x8e,0x64,
                                 0xaa,0xbd,0xc7,0xd2,0xa3,0xb0,0x67,0x3b,
                                 0x53,0xdf,0x73,0x96,0xfe,0x68,0xfb,0x33,
                                 0x15,0x73,0xf7,0xfc,0x93,0x33,0xf3,0xad,
                                 0x92,0x63,0x7f,0x38,0xf4,0xec,0xc1,0xc8,
                                 0x59,0xf9,0xb3,0x9d,0x3d,0xe7,0x08,0xbf,
                                 0xc8,0x5b,0x0b,0xf0,0x50,0x50,0x00,0x52,
                                 0x3c,0xeb,0x15,0x31,0x38,0xab,0x01,0x43,
                                 0xcf,0x39,0xf1,0xfb,0xc3,0xed,0x33,0x67,
                                 0xd2,0x20,0x60,0xf2,0xab,0x9c,0x9c,0x38,
                                 0x57,0xfe,0xc2,0x39,0xf5,0xd3,0x77,0x55,
                                 0x50,0x93,0x7b,0xcb,0xfe,0x96,0xbb,0x77,
                                 0x6c,0x16,0x25,0xe7,0x10,0xc2,0xb2,0x9d,
                                 0xdc,0xa5,0x59,0x60,0x2d,0x9c,0xd4,0x39,
                                 0x72,0x20,0x9d,0xf3,0x6a,0x28,0xe7,0xe2,
                                 0xca,0x57,0x3e,0xc5,0x28,0x57,0xa6,0x9f,
                                 0xc8,0xfd,0xe6,0xc7,0xf5,0xd8,0xb2,0x1f,
                                 0x6b,0xbe,0x0f,0x1b,0x7c,0xaf,0xf6,0x67,
                                 0x30,0xe1,0x95,0xbf,0xc2,0xe3,0xce,0xec,
                                 0xa0,0x14,0x58,0x4d,0x55,0x3a,0x03,0x74,
                                 0xaa,0xb0,0x4e,0x25,0xd6,0xa9,0xc2,0xd2,
                                 0x2a,0xa8,0xb9,0x6a,0x20,0xf1,0xb4,0x94,
                                 0x57,0xce,0xa9,0x33,0xab,0xa4,0x54,0x66,
                                 0x16,0x7e,0x5e,0x3a,0xf9,0x02,0x19,0x99,
                                 0xc6,0xa7,0x32,0x31,0x4b,0x5f,0x4b,0x85,
                                 0xf6,0x1c,0xf9,0x3b,0x92,0x69,0x50,0xb8,
                                 0x34,0x0c,0x55,0xec,0x4c,0x90,0x53,0x2c,
                                 0xcf,0x81,0x97,0x3b,0x73,0x43,0x27,0x94,
                                 0xeb,0x4c,0xb1,0xa1,0xb4,0xa6,0xa2,0x1c,
                                 0x29,0x23,0x35,0x06,0xc9,0x3a,0x06,0x09,
                                 0xdb,0x06,0xe9,0xc1,0xdf,0xb2,0x00,0xe4,
                                 0x82,0x66,0xa2,0x17,0x25,0xa4,0x0e,0xc5,
                                 0xea,0xa1,0x0c,0xc6,0x43,0x78,0x1e,0xcb,
                                 0x9f,0x2c,0xf1,0x7c,0x16,0xe5,0xa8,0xc7,
                                 0x2c,0xb3,0x7a,0x2d,0x5a,0xa7,0x49,0x44,
                                 0xf6,0xb7,0xa9,0x3f,0x7c,0x54,0x9e,0x79,
                                 0x92,0x68,0x81,0x6c,0xbe,0x4e,0x23,0xdc,
                                 0x34,0x63,0x12,0xf3,0x98,0x4d,0x69,0x11,
                                 0x0b,0xa8,0x31,0xf4,0xfd,0xa9,0xf2,0x80,
                                 0x70,0x15,0x11,0xcb,0xff,0xed,0xfd,0xaf,
                                 0x9b,0xd2,0x19,0xbb,0x46,0x98,0x6c,0x4c,
                                 0xde,0x38,0x57,0x7d,0x78,0x81,0x4f,0xa7,
                                 0x68,0xa7,0xce,0xd8,0x54,0x38,0xa7,0xcd,
                                 0xf8,0x92,0xa7,0x50,0x3c,0x88,0x19,0xcd,
                                 0x2e,0x50,0xca,0x60,0x52,0xaf,0xda,0x1e,
                                 0xf5,0xe6,0xb0,0x1d,0xc4,0x9b,0x83,0xd8,
                                 0xb0,0x5f,0x90,0x1e,0xbb,0xa7,0xab,0xb0,
                                 0x57,0x05,0xef,0x8f,0xaf,0xa2,0x16,0xb1,
                                 0xc7,0x46,0xcb,0x2e,0x38,0xea,0x6e,0xc8,
                                 0x57,0xc9,0x3f,0x30,0xac,0xa2,0xd9,0x34,
                                 0x6c,0xcb,0x8a,0x8d,0xe9,0xfe,0xdf,0xec,
                                 0xa5,0x84,0x2a,0xd2,0xff,0x98,0xb9,0xaa,
                                 0x91,0x23,0xe6,0x51,0xee,0x9e,0x32,0x9d,
                                 0x03,0x9b,0x32,0x68,0x7f,0xcb,0x98,0x28,
                                 0xb2,0x84,0x94,0x7c,0x1e,0x6b,0x44,0x9d,
                                 0x14,0x8d,0x98,0x7a,0xa5,0x06,0xf5,0x9c,
                                 0xe7,0xd7,0x06,0xc4,0xab,0x35,0x8c,0x1b,
                                 0x03,0xc6,0x69,0x83,0x61,0x60,0x60,0x59,
                                 0x57,0xfd,0x85,0x3d,0x58,0x6d,0xa3,0x29,
                                 0x44,0x49,0xe6,0x1f,0x65,0x67,0x21,0x15,
                                 0xab,0x68,0x0c,0x2c,0x2d,0xeb,0xb4,0x9f,
                                 0x96,0x34,0xdb,0xfd,0xa1,0x91,0xec,0x38,
                                 0xca,0xda,0x84,0x3a,0xd1,0xf4,0x7a,0x0e,
                                 0xf3,0xb1,0x9e,0x13,0xf9,0xe0,0xf0,0xae,
                                 0x14,0x30,0x3a,0xf0,0xbf,0xbe,0x79,0x13,
                                 0xed,0xfb,0x13,0x84,0x04,0x90,0x8e,0x90,
                                 0xe6,0xa3,0x7d,0x4c,0xc9,0xc1,0xef,0x72,
                                 0x70,0x50,0x42,0x26,0x18,0xb0,0xfd,0x13,
                                 0x0c,0x80,0xe4,0xfb,0xe2,0x10,0x73,0x57,
                                 0xbd,0xb1,0xd8,0x91,0x7f,0x00,0x1d,0x9c,
                                 0xad,0x81,0x4e,0x34,0xe8,0x04,0x20,0xf1,
                                 0xf8,0xb8,0xde,0x17,0xfd,0xb4,0xd6,0x06,
                                 0xa9,0x76,0xa6,0x3c,0xe4,0xac,0x63,0xd5,
                                 0xdd,0xd0,0xfe,0x40,0x9f,0xd1,0xf4,0xd4,
                                 0xfe,0x1d,0x0f,0x1f,0x74,0xfb,0xd3,0xf0,
                                 0x09,0xa3,0x25,0x41,0x51,0xdc,0xe2,0x05,
                                 0xca,0xad,0x2c,0x5b,0xea,0x68,0xb3,0xd5,
                                 0x74,0x49,0x35,0x96,0xea,0xbb,0xfc,0x5e,
                                 0x7d,0x96,0xf1,0x70,0x96,0xe9,0x1d,0xec,
                                 0x0f,0x00,0x33,0x60,0x83,0xa7,0xec,0x92,
                                 0x8e,0xa3,0x65,0xaf,0xa2,0xd4,0xfd,0x23,
                                 0xf2,0x32,0xfa,0xc7,0x92,0x8b,0x1e,0x2c,
                                 0x68,0x86,0x02,0x32,0xa6,0x85,0xe0,0x26,
                                 0x8e,0x2d,0xa5,0x15,0xa4,0xdb,0xe8,0x55,
                                 0xfa,0x95,0xe7,0xcc,0x5c,0x10,0x79,0xfe,
                                 0x24,0x7e,0x93,0x84,0x3b,0xcd,0xc2,0x16,
                                 0xf2,0x36,0xa3,0x8b,0xad,0x4e,0x93,0xaf,
                                 0x69,0xaf,0x26,0xb7,0xff,0x73,0x71,0x06,
                                 0xea,0xde,0x2a,0x1f,0x0f,0x06,0x3d,0xb2,
                                 0x83,0xe3,0x49,0x82,0x14,0xe2,0xc6,0x3c,
                                 0xa0,0x32,0x34,0xdc,0x39,0x07,0xde,0x0e,
                                 0xe9,0x8d,0xdf,0x8e,0x7a,0x26,0x16,0xab,
                                 0x1c,0xe4,0x09,0x44,0xb8,0x62,0x77,0x13,
                                 0x1e,0x7c,0x65,0xc2,0xd2,0x5c,0xb1,0xe0,
                                 0x1a,0xfa,0x2a,0x77,0x79,0xb2,0x60,0x79,
                                 0x8e,0x2c,0x02,0x92,0xfa,0xe9,0xa0,0xdb,
                                 0x45,0xcb,0xc3,0xf1,0x94,0x58,0x25,0x82,
                                 0x1b,0x52,0x9c,0x77,0x23,0x2c,0x45,0x93,
                                 0x80,0xf1,0x29,0xf9,0x10,0xf3,0x3b,0xdb,
                                 0x40,0xa3,0x7b,0xdc,0x22,0x8b,0xff,0xb8,
                                 0xfb,0x82,0xbc,0x80,0x25,0x20,0x44,0x59,
                                 0x38,0xf5,0x14,0xc6,0x6b,0x5c,0xbb,0xe7,
                                 0x1e,0xcd,0x04,0xe6,0x74,0xf3,0x2c,0x00,
                                 0x7d,0xcd,0x6b,0x13,0xaf,0x75,0x12,0x90,
                                 0xa3,0x6e,0xe8,0xb6,0x25,0x8a,0x69,0x2e,
                                 0x2e,0xd1,0x1f,0x39,0xea,0x69,0x82,0x32,
                                 0xe0,0x90,0x1c,0xbf,0x97,0xd1,0x82,0x21,
                                 0x10,0x1b,0xd2,0xc1,0x80,0xc4,0xd1,0x22,
                                 0x12,0x0a,0x1a,0x25,0x33,0x9c,0x0c,0x08,
                                 0x8e,0x4e,0xb5,0xa5,0x50,0xe8,0xb2,0x07,
                                 0xb2,0xeb,0x91,0x45,0xde,0xa6,0x99,0x0b,
                                 0x91,0x4a,0xe7,0xcd,0x22,0x31,0x2f,0xee,
                                 0xdc,0x80,0x2f,0x06,0x09,0xe3,0x49,0x84,
                                 0x1c,0x3a,0xc0,0x11,0xf7,0x4b,0x7e,0xcb,
                                 0xf2,0x74,0x77,0x74,0xcb,0xee,0xe9,0x22,
                                 0x8d,0x59,0x3e,0xb8,0x83,0x01,0x07,0x0b,
                                 0xc8,0xc2,0xb2,0x1a,0xf3,0x16,0x0b,0x0d,
                                 0x02,0x16,0xc7,0xe9,0x1c,0x4f,0xb7,0xf2,
                                 0xf4,0x9c,0xf1,0x38,0x66,0xe1,0x6d,0x16,
                                 0xdc,0x06,0x34,0x1b,0xac,0x56,0xab,0x01,
                                 0x22,0x83,0xdd,0xbb,0xf2,0x52,0xa4,0x5e,
                                 0xbf,0x6e,0x8e,0xa4,0xcc,0x96,0xb8,0x17,
                                 0x5d,0xcf,0x48,0x0b,0x24,0x5c,0x06,0xa8,
                                 0x8c,0x91,0x63,0xf8,0xc2,0xb2,0x65,0x88,
                                 0x4a,0xed,0xad,0x8e,0x03,0xa2,0xa9,0x55,
                                 0x99,0x88,0xa0,0x6d,0x26,0x38,0xfc,0xb1,
                                 0x29,0x76,0x68,0x48,0xbe,0x7f,0x57,0x4c,
                                 0xfa,0xb5,0x09,0xc9,0x81,0x0f,0x4b,0x98,
                                 0xc2,0x40,0xc0,0x46,0xa6,0xe0,0x50,0x01,
                                 0x58,0x4b,0x69,0xf2,0x3c,0x69,0xb8,0xff,
                                 0x88,0xb4,0xf5,0xb1,0x4e,0x25,0x49,0x43,
                                 0x88,0x10,0xec,0xa0,0x60,0x6e,0x31,0x73,
                                 0xb0,0xea,0xfd,0xc3,0x63,0x86,0xad,0x36,
                                 0x03,0xd2,0x8b,0x31,0xb6,0x36,0xaa,0x82,
                                 0x0a,0x92,0x42,0x9d,0x0d,0x33,0xbe,0x6a,
                                 0x05,0x98,0x69,0x79,0xe9,0x95,0x85,0xdc,
                                 0xb8,0xb5,0xc6,0xaf,0xd6,0xec,0x7d,0x28,
                                 0xc3,0xac,0x4f,0xac,0x75,0xa3,0xdb,0x64,
                                 0x8c,0xf9,0x4d,0x41,0xb1,0x20,0x98,0xed,
                                 0x13,0xcf,0x36,0xea,0xa9,0x16,0x32,0x90,
                                 0xb5,0x64,0x04,0x82,0x6c,0x1f,0xf4,0xc0,
                                 0xb2,0x6c,0x73,0x56,0xd8,0x24,0x4a,0x8a,
                                 0x38,0x36,0x7b,0x45,0x79,0xba,0xb2,0x92,
                                 0xc9,0xb8,0x0e,0xe4,0xea,0xcc,0x37,0x26,
                                 0x6e,0x9e,0x0c,0x45,0x48,0x8f,0x74,0x7d,
                                 0xd1,0x83,0x17,0xce,0xe0,0xd8,0xa4,0x47,
                                 0x2a,0x0d,0xd5,0x27,0x70,0xc2,0x75,0x8e,
                                 0xc2,0x69,0x93,0x13,0x31,0x67,0xe4,0xf8,
                                 0xd3,0x9f,0x64,0x4b,0x97,0x90,0xad,0xb5,
                                 0xec,0x81,0xb9,0x32,0x1a,0x2b,0x5a,0xab,
                                 0xc2,0x6b,0x49,0xaf,0x8e,0xf0,0x49,0x5a,
                                 0xa8,0x26,0xe4,0x99,0x62,0xd0,0x93,0x37,
                                 0x14,0x7f,0x61,0xbf,0xb2,0x6b,0x9c,0x10,
                                 0x8d,0xe4,0x37,0x3f,0x44,0x7e,0xd3,0x25,
                                 0x0f,0xa3,0x8c,0x29,0xc8,0x73,0xe4,0x35,
                                 0x52,0x97,0x7a,0x5a,0xb0,0xec,0x2f,0xfa,
                                 0xe9,0x39,0xda,0x12,0xc5,0x4c,0x79,0xfc,
                                 0x32,0xe5,0x71,0x97,0xf2,0xfe,0x39,0x9a,
                                 0x0d,0xf3,0x48,0x2f,0x3c,0x89,0xad,0xac,
                                 0xf1,0xcc,0x25,0xcd,0x66,0xba,0x04,0x07,
                                 0x2d,0x96,0x95,0xc0,0xaf,0xd7,0x0e,0x91,
                                 0x7f,0x37,0xc6,0xe4,0xf9,0x99,0x8b,0xcf,
                                 0xd1,0xfd,0xd9,0x7a,0xa8,0xb6,0x20,0x17,
                                 0x9b,0x90,0xe9,0x79,0xb4,0xbc,0x39,0x53,
                                 0xb5,0x04,0x69,0x72,0xe4,0x7a,0xef,0x50,
                                 0x28,0x2e,0x11,0x66,0x62,0x9e,0xb1,0x7c,
                                 0xce,0xe3,0x90,0x50,0x54,0xee,0x79,0x14,
                                 0xcc,0x55,0xf4,0xa5,0xd1,0x92,0x0b,0xa2,
                                 0xef,0xf3,0xd0,0xc0,0xe0,0x68,0x96,0xcb,
                                 0xa0,0xed,0x7c,0x2e,0xd1,0x39,0xb6,0x38,
                                 0x60,0xb0,0x60,0x34,0x2f,0x32,0xe4,0x0b,
                                 0x1c,0x02,0x0b,0xdc,0x67,0xe7,0xa8,0x57,
                                 0x8a,0xe1,0x4d,0x9f,0xde,0x47,0x26,0x1e,
                                 0x74,0x45,0x1f,0xc8,0x34,0xe3,0x0b,0x85,
                                 0x76,0xad,0xd0,0x88,0x75,0xe3,0xa3,0xb5,
                                 0x25,0xef,0xc9,0x4c,0xed,0x92,0x0c,0x3a,
                                 0xc4,0x05,0x43,0x27,0x12,0xc7,0x84,0xe6,
                                 0x39,0xae,0x7c,0x0d,0x9c,0x16,0x3c,0x63,
                                 0x04,0xed,0x80,0xe4,0x53,0xdd,0x50,0x6d,
                                 0xe5,0x24,0xa3,0x09,0x4a,0x25,0x76,0x55,
                                 0x5b,0xa7,0xdc,0x35,0x30,0x78,0x1f,0xa3,
                                 0x3a,0xca,0x1b,0x76,0x4d,0x33,0x26,0x96,
                                 0xe7,0xba,0x3b,0xc3,0xd1,0xaf,0xeb,0x59,
                                 0x6c,0x6d,0x00,0x2e,0x97,0x27,0x9f,0xcf,
                                 0xc9,0x9f,0xef,0x2f,0x3e,0xbd,0xff,0x70,
                                 0x76,0x32,0xd9,0x30,0x3d,0x51,0x6e,0x39,
                                 0xcf,0xd8,0x42,0xfa,0xac,0xa4,0xc1,0x0c,
                                 0xcf,0x88,0x15,0xe3,0xb8,0x64,0xe3,0x96,
                                 0x50,0x01,0x61,0x35,0xe4,0x30,0xec,0xb9,
                                 0x8a,0xda,0xea,0x0f,0x47,0x6f,0x4d,0x12,
                                 0x74,0xd9,0x5e,0x74,0xd8,0xaa,0x7b,0x45,
                                 0xfb,0xff,0xc8,0x16,0x8c,0x11,0x2c,0x93,
                                 0x94,0xe1,0xba,0xb2,0xd6,0x11,0x33,0xb0,
                                 0x9d,0x9a,0x34,0xe5,0xd6,0x1f,0x62,0x2c,
                                 0x63,0x70,0x22,0xdf,0x6d,0x94,0x6c,0x25,
                                 0xdf,0x0f,0x78,0xa5,0x81,0x26,0x8e,0xa8,
                                 0x77,0x1e,0xe4,0x6e,0xb0,0x22,0x61,0x26,
                                 0xef,0x7e,0x29,0x0a,0x90,0xf6,0x97,0xe4,
                                 0x8b,0x2f,0x3c,0x31,0xc4,0xdf,0xf3,0x9e,
                                 0x38,0xa2,0x71,0x50,0xc4,0x32,0xad,0x1e,
                                 0x2b,0x2e,0x97,0xf2,0xac,0x52,0x2a,0x1f,
                                 0x22,0x7e,0x10,0x04,0xf5,0xfb,0x8f,0x6b,
                                 0x9d,0xdf,0x8c,0x8d,0xa6,0xda,0x7a,0xb2,
                                 0xa1,0x30,0xf6,0x13,0x6a,0xa9,0x8f,0x3c,
                                 0x5b,0xd1,0x2c,0x34,0x00,0x5b,0xde,0xc6,
                                 0x5e,0xd3,0xbb,0xf9,0xc0,0xf7,0x0e,0xe5,
                                 0x1d,0xbe,0xeb,0xa1,0x60,0xea,0xff,0x1d,
                                 0x92,0xca,0x17,0x36,0x1f,0x63,0x4e,0x85,
                                 0x46,0xb2,0x8d,0xed,0x44,0xcb,0xcb,0x26,
                                 0x76,0x7d,0x95,0x27,0xae,0x2b,0xb6,0xa6,
                                 0xba,0x46,0x58,0x9c,0x6f,0xdc,0xa6,0x57,
                                 0x7a,0x5c,0xc8,0x1e,0x32,0x67,0xff,0x5c,
                                 0x8f,0x97,0x17,0x7e,0x51,0xf6,0x7f,0x66,
                                 0x8a,0xd6,0x2d,0x78,0x4b,0x7e,0x15,0x50,
                                 0xa5,0xbb,0x9f,0xf0,0xf4,0x8d,0xf6,0x34,
                                 0xb1,0x90,0xa9,0xb8,0xc0,0x6d,0xf5,0x66,
                                 0x53,0xb2,0xae,0x6b,0x7b,0xb4,0xad,0xf3,
                                 0x30,0x6e,0x17,0x21,0xe9,0xa6,0x50,0xeb,
                                 0x1a,0xb6,0x47,0x1d,0x42,0x93,0xec,0xbf,
                                 0xa3,0x97,0x82,0xf8,0x65,0xc8,0x96,0xe9,
                                 0x09,0x37,0x1d,0xc9,0x66,0x54,0x02,0xbb,
                                 0x4f,0x70,0x17,0xcc,0x92,0x99,0x98,0xcb,
                                 0x24,0xa7,0xb1,0xad,0x7a,0xab,0xda,0x78,
                                 0x3f,0x82,0xab,0x1e,0x99,0x6e,0x5f,0x0c,
                                 0x71,0xc5,0xec,0x43,0x5c,0x9e,0x29,0x6a,
                                 0x66,0xcb,0xbc,0xdc,0x7c,0x56,0xbd,0x53,
                                 0x4d,0x5c,0x4b,0x73,0x6e,0x9a,0xa2,0x12,
                                 0x45,0x1a,0x42,0x3a,0x71,0xd3,0x5a,0x35,
                                 0x5f,0x19,0x0d,0xea,0x3a,0x98,0xde,0xe5,
                                 0x7a,0xb7,0xd9,0x07,0x4d,0x89,0xb2,0x0f,
                                 0xb1,0xdd,0x65,0x78,0x58,0x78,0x9b,0x03,
                                 0x51,0x3b,0x98,0x83,0x16,0xa6,0xd9,0xb0,
                                 0x4d,0x1e,0x40,0xf3,0x4a,0x63,0x02,0x87,
                                 0x48,0x35,0x75,0x94,0xc8,0xd4,0xa2,0xd2,
                                 0x99,0xd1,0x99,0xb2,0xb0,0x4a,0xe9,0xb0,
                                 0x72,0xbf,0x31,0xc3,0x76,0x3b,0x24,0x76,
                                 0x1a,0x3d,0xb6,0xad,0x46,0x6d,0x43,0xc8,
                                 0x56,0xf5,0xf8,0x59,0x86,0x17,0xeb,0x0c,
                                 0xfb,0x6d,0x86,0x4f,0x67,0xbb,0xa7,0x07,
                                 0xe5,0x15,0x8d,0x32,0x9a,0x7a,0x5d,0x66,
                                 0x55,0x7a,0x6d,0x8f,0xdc,0xbd,0x3d,0x5b,
                                 0x1e,0xdd,0x1d,0x79,0xae,0xdf,0xc4,0xb8,
                                 0xd0,0x18,0x32,0x3f,0xcb,0xba,0x86,0x3a,
                                 0x5a,0xb7,0x27,0x9a,0xab,0xac,0xf6,0x88,
                                 0xd4,0x8c,0x87,0x05,0x7a,0x55,0x19,0x39,
                                 0x43,0x9d,0xaa,0x47,0xa6,0x97,0x55,0x68,
                                 0xe0,0x3f,0xc9,0x97,0x27,0x28,0xde,0x56,
                                 0xeb,0x62,0x49,0x77,0xe2,0x4d,0xbf,0x83,
                                 0x5a,0xad,0x6e,0xba,0x70,0x1b,0x27,0xeb,
                                 0xb6,0xba,0xc1,0xc2,0x65,0x20,0xc4,0x40,
                                 0x4b,0x8e,0x97,0x30,0xd2,0x0e,0xeb,0xbd,
                                 0x36,0x86,0xea,0x45,0xfc,0xdf,0xb0,0xec,
                                 0x21,0x20,0xa0,0x1f,0x00,0x00};
#else
const uint8_t index_html_gz[] = { 0x1f, 0x8b, 0x08, 0x08, 0x61, 0x20, 0xee, 0x63, 0x00, 0xff, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x68, 0x74, 0x6d, 0x6c, 0x2e, 0x67, 0x7a, 0x00, 0xc5, 0x5a, 0x7b, 0x6f, 0xdb, 0x46, 0x12, 0xff, 0x3f, 0x9f, 0x62, 0xa3, 0xe2, 0x6a, 0x2a, 0x96, 0xa8, 0x87, 0x9b, 0x36, 0x75, 0x2c, 0x17, 0x8e, 0xed, 0xa4, 0x39, 0x38, 0xad, 0x61, 0xf9, 0xea, 0x18, 0x87, 0x83, 0xb1, 0x26, 0x57, 0x12, 0x13, 0x92, 0x4b, 0x2c, 0x97, 0x92, 0xdc, 0xd6, 0xdf, 0xbd, 0xbf, 0xd9, 0xe5, 0x5b, 0x92, 0x93, 0x1e, 0x70, 0x38, 0x41, 0x0f, 0x72, 0x76, 0x66, 0x76, 0x76, 0xde, 0xbb, 0xd4, 0xd1, 0xf3, 0xb3, 0x5f, 0x4f, 0xaf, 0x6f, 0x2f, 0xcf, 0xd9, 0x42, 0x47, 0xe1, 0xf1, 0xb3, 0x67, 0x47, 0xe5, 0xaf, 0xe0, 0xfe, 0xf1, 0x33, 0x86, 0xd7, 0x51, 0x24, 0x34, 0x67, 0x31, 0x8f, 0xc4, 0x64, 0x6f, 0x19, 0x88, 0x55, 0x22, 0x95, 0xde, 0x63, 0x9e, 0x8c, 0xb5, 0x88, 0xf5, 0x64, 0x6f, 0x15, 0xf8, 0x7a, 0x31, 0xf1, 0xc5, 0x32, 0xf0, 0x44, 0xdf, 0xdc, 0xf4, 0x88, 0xca, 0xbc, 0x82, 0x38, 0xd0, 0x01, 0x0f, 0xfb, 0xa9, 0xc7, 0x43, 0x31, 0x19, 0xb9, 0xc3, 0x6a, 0x28, 0x4b, 0x85, 0x32, 0x70, 0x7e, 0x8f, 0xa1, 0x58, 0xee, 0xb1, 0x41, 0x7d, 0x3a, 0x6f, 0xc1, 0x55, 0x2a, 0xf4, 0xa4, 0x93, 0xe9, 0x59, 0xff, 0x55, 0x87, 0x06, 0x9f, 0xd9, 0x61, 0x1d, 0xe8, 0x50, 0x1c, 0xff, 0x53, 0x3e, 0xa4, 0x3a, 0xf0, 0x3e, 0x33, 0x2d, 0x52, 0x7d, 0x34, 0xb0, 0xc0, 0x02, 0x25, 0xd5, 0x0f, 0x74, 0x57, 0x4c, 0xf5, 0x0d, 0xc9, 0xca, 0x83, 0x58, 0x28, 0xf6, 0x47, 0x09, 0xa4, 0x97, 0x91, 0xf6, 0x90, 0x8d, 0x86, 0xc3, 0x7f, 0xbc, 0x6e, 0x0c, 0x2c, 0x44, 0x30, 0x5f, 0xe8, 0x43, 0xf6, 0xdd, 0x8f, 0xcb, 0x45, 0x73, 0xe4, 0x9e, 0x7b, 0x9f, 0xe7, 0x4a, 0x66, 0xb1, 0xdf, 0xf7, 0x64, 0x28, 0xd5, 0x21, 0xfb, 0xe6, 0xe0, 0xe0, 0xa0, 0x89, 0xe3, 0x07, 0x69, 0x12, 0xf2, 0x87, 0x43, 0x36, 0x0b, 0xc5, 0xba, 0x39, 0xc4, 0xc3, 0x60, 0x1e, 0xf7, 0x03, 0x2d, 0xa2, 0xf4, 0x90, 0x79, 0xd0, 0x9f, 0x50, 0x4d, 0x84, 0x4f, 0x19, 0x96, 0x35, 0x7b, 0x00, 0x73, 0xa3, 0xde, 0xed, 0x48, 0x72, 0x29, 0xd4, 0x2c, 0x94, 0xab, 0x43, 0xb6, 0x08, 0x7c, 0x5f, 0xc4, 0x2d, 0x11, 0xa5, 0xf2, 0xa1, 0x5b, 0xc5, 0xfd, 0x20, 0xc3, 0x2c, 0x3f, 0x24, 0x2d, 0x19, 0xb4, 0xcc, 0xbc, 0x45, 0x9f, 0x7b, 0x3a, 0x90, 0xf1, 0x21, 0x8b, 0x65, 0x2c, 0xaa, 0xf1, 0x47, 0xab, 0x41, 0xa3, 0x35, 0x92, 0x72, 0xa7, 0xc2, 0xda, 0x4c, 0x0b, 0x8d, 0x6d, 0x19, 0xda, 0x54, 0x99, 0x9a, 0xdf, 0x3b, 0xe3, 0xef, 0x5e, 0xf6, 0xd8, 0xf8, 0x00, 0x1e, 0xf1, 0xe3, 0x8f, 0xdd, 0x6d, 0x0b, 0x20, 0x5e, 0xc9, 0x9a, 0xa5, 0x32, 0x0c, 0x7c, 0xa2, 0xe0, 0xce, 0xe8, 0xe0, 0xfb, 0x1e, 0xab, 0xbe, 0xdc, 0x97, 0x5b, 0xe9, 0xca, 0x85, 0xbf, 0x6c, 0x5b, 0xf5, 0xa9, 0x85, 0x57, 0x2e, 0x29, 0x42, 0xe1, 0x61, 0x21, 0x4f, 0xeb, 0xe5, 0x90, 0xb8, 0x2c, 0x45, 0x4b, 0x3d, 0x5b, 0x57, 0x0a, 0xb9, 0xbf, 0x7f, 0x85, 0xa5, 0x8e, 0xe8, 0x6b, 0x8c, 0xf5, 0x22, 0x0c, 0x86, 0x35, 0xc9, 0x37, 0x58, 0x2f, 0xc8, 0xbc, 0x2d, 0xce, 0x5e, 0xa6, 0x52, 0xe2, 0x97, 0xc8, 0x60, 0xd3, 0x1d, 0xf2, 0x75, 0xe7, 0xc6, 0x19, 0x37, 0x0c, 0x50, 0xe7, 0xce, 0x95, 0xe0, 0x2d, 0xbe, 0x89, 0x4c, 0x11, 0xa1, 0xa4, 0x8e, 0x59, 0xb0, 0x16, 0x7e, 0x93, 0xaf, 0xb2, 0x26, 0x1d, 0xb6, 0xb5, 0x98, 0x34, 0x60, 0x8f, 0x36, 0xe6, 0x06, 0x79, 0xd0, 0x15, 0x21, 0xe8, 0xa9, 0x20, 0xd1, 0x4c, 0x3f, 0x24, 0x62, 0xd2, 0xd1, 0x62, 0xad, 0x07, 0x9f, 0xf8, 0x92, 0x5b, 0x68, 0xa7, 0x0a, 0xcd, 0x25, 0x57, 0x0c, 0xa1, 0x3c, 0x35, 0xa1, 0x3c, 0x61, 0xb3, 0x2c, 0x36, 0xd6, 0x61, 0x8e, 0xee, 0x31, 0xd1, 0x65, 0x7f, 0x18, 0x84, 0x00, 0x23, 0x4b, 0x09, 0x2f, 0x18, 0xb2, 0xc9, 0x64, 0xc2, 0x1c, 0x81, 0x7b, 0xc1, 0xfe, 0xfc, 0x93, 0xfd, 0xf1, 0xd8, 0x75, 0x4d, 0xe4, 0xb3, 0x9f, 0x58, 0xe7, 0x53, 0x9e, 0x11, 0x3a, 0xec, 0x90, 0x09, 0x0b, 0xee, 0xb1, 0xb8, 0x49, 0x2a, 0x5c, 0xa3, 0x24, 0xa0, 0x0f, 0x0d, 0x56, 0x9e, 0xae, 0x64, 0x1b, 0xcb, 0x7a, 0x73, 0x89, 0x66, 0x6f, 0x7b, 0x6c, 0xd1, 0xc6, 0x33, 0xc6, 0x88, 0x79, 0xf8, 0x36, 0x08, 0xc3, 0x53, 0xb2, 0x38, 0x09, 0xf2, 0xcd, 0x70, 0x78, 0x72, 0x32, 0x1c, 0x5a, 0x39, 0x36, 0x30, 0x7a, 0x4c, 0xed, 0xe2, 0x72, 0x81, 0x14, 0x75, 0x93, 0xcb, 0x37, 0x6e, 0x50, 0x97, 0x23, 0x3d, 0xe6, 0xef, 0xa2, 0x9e, 0x6a, 0x25, 0x3f, 0x8b, 0xba, 0x14, 0x07, 0x07, 0x6d, 0x29, 0x6a, 0x38, 0x3d, 0xc6, 0xdb, 0x9c, 0x60, 0xa5, 0x1d, 0x72, 0x6c, 0x8c, 0xf4, 0x58, 0xb8, 0x8b, 0x7a, 0x53, 0x8e, 0x57, 0xc3, 0x42, 0x8e, 0x2d, 0x38, 0x3d, 0xe6, 0x81, 0x93, 0x2f, 0xbd, 0x2c, 0x42, 0xa6, 0x73, 0xe7, 0x42, 0x9f, 0x87, 0x82, 0x2e, 0xdf, 0x3c, 0xbc, 0xf7, 0x1d, 0xdd, 0xed, 0xb1, 0xac, 0x3e, 0xee, 0xc1, 0x87, 0xb5, 0xc8, 0x51, 0x9c, 0x8e, 0xc7, 0x63, 0x78, 0x55, 0xa7, 0xfb, 0x9a, 0x65, 0x2e, 0x64, 0x99, 0xb0, 0xa0, 0x67, 0x04, 0x82, 0xe1, 0xbf, 0xfd, 0x96, 0x39, 0x64, 0x7e, 0xcf, 0xf5, 0xc2, 0x00, 0xc8, 0x46, 0x6e, 0xb0, 0x33, 0xc3, 0xd2, 0x0c, 0x93, 0xdd, 0x8b, 0xe1, 0x9f, 0x8d, 0x8d, 0x69, 0xba, 0xdc, 0x47, 0xc0, 0x83, 0x6e, 0x72, 0x57, 0x00, 0x09, 0x24, 0x75, 0x79, 0x92, 0x88, 0xd8, 0x3f, 0x5d, 0x04, 0xa1, 0xef, 0x64, 0x98, 0x95, 0xdc, 0x33, 0xc5, 0x60, 0x46, 0x82, 0x9f, 0x52, 0xce, 0x5e, 0x43, 0xaa, 0xb1, 0xdf, 0x01, 0xa3, 0x19, 0xe0, 0x08, 0xf7, 0x25, 0x7e, 0xc6, 0xec, 0x05, 0xfb, 0xc0, 0xf5, 0xc2, 0xbd, 0x7c, 0xdf, 0x63, 0x73, 0x00, 0x9c, 0x62, 0x96, 0x3e, 0x1b, 0x8d, 0x86, 0x5d, 0x36, 0x60, 0xe3, 0x1e, 0x5b, 0x61, 0x60, 0xce, 0xf6, 0x19, 0x12, 0xe3, 0x69, 0x7e, 0x49, 0xf9, 0x31, 0x32, 0xfc, 0x2d, 0xba, 0xc1, 0x4b, 0x0c, 0x20, 0x17, 0xcc, 0x40, 0x2e, 0x1a, 0x28, 0x23, 0x10, 0x9d, 0x03, 0xd2, 0x1f, 0x61, 0xda, 0x8b, 0x1e, 0x9b, 0x36, 0xf1, 0x69, 0x98, 0x82, 0xcd, 0x0c, 0x4f, 0x7b, 0xec, 0x06, 0xd7, 0x51, 0x8f, 0xbd, 0xc3, 0x4f, 0xf2, 0xba, 0x0a, 0xc1, 0xb5, 0x43, 0xf1, 0x97, 0xba, 0xf7, 0x62, 0x1e, 0xc4, 0x97, 0x10, 0xde, 0xc1, 0x9a, 0x52, 0x97, 0x2b, 0xcf, 0x01, 0x76, 0x02, 0x19, 0xa1, 0x4b, 0x2c, 0xaf, 0xc7, 0x9e, 0x8f, 0xcc, 0x48, 0x58, 0xba, 0xcd, 0x84, 0x71, 0x02, 0xa4, 0xc6, 0xca, 0x53, 0xca, 0x0b, 0x00, 0x85, 0x15, 0x08, 0x9c, 0x1f, 0xab, 0x89, 0x1e, 0xb6, 0x4d, 0x74, 0xc3, 0x8e, 0xa0, 0x00, 0x32, 0x12, 0x89, 0xb7, 0x32, 0x90, 0x7d, 0x40, 0x8e, 0xcb, 0x75, 0x16, 0x63, 0x95, 0x26, 0x09, 0xeb, 0x5d, 0x49, 0x47, 0xeb, 0xb1, 0x90, 0x82, 0x2e, 0xd7, 0x40, 0x31, 0x58, 0x02, 0x2c, 0xa5, 0x5d, 0xda, 0x0d, 0x08, 0x60, 0xa2, 0xda, 0xd2, 0xac, 0x91, 0xc9, 0x03, 0xd2, 0xdc, 0xfb, 0xae, 0x50, 0x60, 0x78, 0xf8, 0x8e, 0xea, 0x0c, 0x39, 0xa1, 0xd5, 0x06, 0x8c, 0x66, 0x2f, 0xc6, 0x94, 0xdd, 0x99, 0x76, 0xb9, 0xef, 0x1b, 0x07, 0x9f, 0x22, 0x61, 0x3a, 0xe0, 0x46, 0xbe, 0xd7, 0x82, 0x8e, 0x10, 0xce, 0x66, 0xe6, 0x19, 0xb2, 0x43, 0xa1, 0x27, 0xe4, 0x19, 0x0b, 0xb0, 0xfa, 0xae, 0x6b, 0x15, 0xc1, 0xd2, 0xd6, 0xaa, 0xdf, 0xd2, 0x6a, 0x07, 0x3e, 0x48, 0x65, 0x2e, 0xd5, 0x5c, 0xe9, 0x0e, 0x1a, 0xb0, 0x2a, 0x74, 0x8a, 0x8b, 0x3c, 0x78, 0x10, 0x9c, 0xf0, 0x42, 0xc8, 0x73, 0xbe, 0xc4, 0xdd, 0x45, 0x90, 0xa2, 0xdf, 0x10, 0xca, 0xe9, 0xd4, 0xc8, 0xe1, 0xc3, 0x55, 0x42, 0x26, 0x23, 0x91, 0x4b, 0x8f, 0xd8, 0x63, 0x6e, 0xf2, 0x9d, 0xd4, 0x11, 0x2a, 0xd8, 0x26, 0xb1, 0x76, 0x13, 0x25, 0x08, 0xfb, 0x4c, 0xcc, 0x78, 0x16, 0x6a, 0x5a, 0xdf, 0x88, 0x82, 0x71, 0x56, 0xda, 0x52, 0xbb, 0x86, 0x5e, 0xa4, 0xff, 0x1e, 0xfe, 0xc7, 0x4d, 0xf8, 0x5c, 0x7c, 0xb4, 0x7e, 0xb9, 0x01, 0xbf, 0x25, 0x7f, 0xe8, 0x93, 0x0d, 0xe5, 0x6c, 0x86, 0x3e, 0xf1, 0x42, 0xcc, 0xa0, 0xb7, 0x77, 0x75, 0xd0, 0xb5, 0x84, 0x31, 0x60, 0xb2, 0x50, 0x70, 0x75, 0x85, 0x92, 0x4e, 0x36, 0xc0, 0x3b, 0x77, 0x97, 0x2a, 0xb4, 0x21, 0x05, 0x5c, 0xbd, 0x47, 0x6e, 0x08, 0x05, 0x7e, 0x69, 0x69, 0x88, 0xfe, 0xed, 0x6a, 0x01, 0xeb, 0x7a, 0x20, 0xfd, 0xdd, 0xa9, 0xf3, 0x99, 0xbb, 0x48, 0x93, 0x5b, 0xad, 0x12, 0x49, 0x74, 0x27, 0xbe, 0x5c, 0xc5, 0xff, 0x8d, 0x51, 0x0c, 0xf1, 0x76, 0xa3, 0x6c, 0x18, 0xa0, 0xa1, 0xf5, 0xff, 0x97, 0xaa, 0x8d, 0xc0, 0x59, 0xf2, 0x3f, 0xd5, 0x74, 0x05, 0x41, 0x5c, 0x2e, 0x82, 0xd4, 0x7d, 0x27, 0x6c, 0x8d, 0x68, 0xf4, 0x21, 0x34, 0xa9, 0x12, 0x3a, 0x53, 0x71, 0x99, 0x68, 0x40, 0x5f, 0xe0, 0xdb, 0xa2, 0xb1, 0x9b, 0x20, 0x4f, 0x30, 0x35, 0x8a, 0x4b, 0x99, 0x7e, 0xdc, 0x85, 0x7f, 0xd3, 0x42, 0xbc, 0xdd, 0x85, 0xf8, 0xae, 0x8e, 0xb8, 0x93, 0x9d, 0x03, 0x8b, 0xf6, 0x59, 0x44, 0xc5, 0x65, 0x85, 0x4c, 0x8f, 0xce, 0x1c, 0xdd, 0x92, 0x7c, 0x4b, 0x7d, 0x9e, 0xd5, 0x42, 0xc1, 0x61, 0xe7, 0x3c, 0x0e, 0xf2, 0x64, 0x9f, 0x25, 0x35, 0x0e, 0xf8, 0xee, 0x8f, 0x76, 0xb0, 0x39, 0x0b, 0xa8, 0xb3, 0x69, 0x32, 0x2a, 0x52, 0x67, 0x07, 0xa6, 0xa4, 0x74, 0x65, 0x24, 0xea, 0x99, 0x8e, 0xce, 0xb0, 0x7e, 0x5d, 0x4c, 0x15, 0xb0, 0xe3, 0x09, 0xaa, 0x12, 0xfc, 0x30, 0x60, 0x47, 0x13, 0x94, 0x2c, 0xf2, 0x48, 0x43, 0x79, 0x4a, 0xb5, 0x14, 0x40, 0x3b, 0x6a, 0x61, 0xbf, 0x58, 0xd8, 0x71, 0x1d, 0x6f, 0x4a, 0x30, 0x01, 0xbc, 0x73, 0x03, 0x03, 0x1d, 0xb9, 0x36, 0xa5, 0x39, 0x33, 0x7c, 0x43, 0x1d, 0x88, 0x66, 0xfb, 0xe6, 0xd2, 0x60, 0x1e, 0xa3, 0x6c, 0x6e, 0xc3, 0x3c, 0xaf, 0x30, 0xcf, 0x09, 0x13, 0xf6, 0x63, 0x8f, 0xb6, 0xdf, 0x45, 0x97, 0x6b, 0x3a, 0xd8, 0xe3, 0x67, 0x47, 0x03, 0xbb, 0x41, 0xc6, 0x4e, 0xf9, 0x5e, 0xfa, 0x0f, 0xb8, 0x30, 0xe3, 0x7e, 0xb0, 0x64, 0x81, 0x3f, 0xd9, 0x93, 0x19, 0x1a, 0x1d, 0xea, 0x07, 0xcc, 0xb6, 0x73, 0xaf, 0x6a, 0x78, 0x0d, 0x86, 0x69, 0x95, 0x27, 0x9d, 0x72, 0x97, 0x39, 0xc4, 0x2e, 0xb3, 0x73, 0x7c, 0x34, 0xc0, 0x58, 0x0b, 0x13, 0xbc, 0xa8, 0xb1, 0x3d, 0x0b, 0x96, 0x9d, 0x82, 0xca, 0xb6, 0xf9, 0xa8, 0x32, 0x68, 0xf3, 0x73, 0x0e, 0xf6, 0x26, 0xe2, 0x0a, 0x05, 0xf4, 0x90, 0x67, 0x5a, 0x56, 0xdc, 0x72, 0xb1, 0x6b, 0xd7, 0xc5, 0x0a, 0xaa, 0x8d, 0x01, 0xf6, 0x9a, 0xa9, 0x66, 0xb4, 0xb5, 0x7f, 0xa2, 0x13, 0xdb, 0x43, 0x91, 0x11, 0x3c, 0xda, 0xab, 0xed, 0x5c, 0x2c, 0xdd, 0xcd, 0xf4, 0xee, 0x5f, 0x57, 0xd4, 0x80, 0x74, 0x56, 0xe9, 0xe1, 0x60, 0xd0, 0x41, 0xb9, 0x5d, 0x05, 0x31, 0x52, 0x95, 0x1b, 0x4a, 0x8f, 0x93, 0x2b, 0xb8, 0x0b, 0x09, 0xbc, 0x7d, 0xd6, 0x39, 0x7c, 0x35, 0xee, 0x34, 0xc9, 0x65, 0x28, 0x80, 0x36, 0x77, 0x2c, 0x93, 0x0d, 0xde, 0x2b, 0xea, 0xad, 0x62, 0xc8, 0x75, 0x23, 0xee, 0xa7, 0xd2, 0xfb, 0x2c, 0x74, 0x85, 0x59, 0xa2, 0xae, 0x52, 0x57, 0xc6, 0x91, 0x48, 0x53, 0x24, 0x2b, 0xca, 0x0b, 0xc5, 0xd5, 0x71, 0x6b, 0xaf, 0x13, 0xcc, 0x98, 0x93, 0x0f, 0xba, 0x3e, 0xc7, 0x19, 0x43, 0x80, 0x29, 0x78, 0xec, 0x09, 0x39, 0x63, 0x6f, 0x42, 0x79, 0x0f, 0x7f, 0x6d, 0xe0, 0x17, 0xfb, 0x93, 0x4c, 0x85, 0xbf, 0xde, 0x7f, 0x42, 0x72, 0x01, 0x73, 0x4c, 0x9d, 0x37, 0x01, 0x16, 0x84, 0xfb, 0x06, 0xcf, 0xd6, 0x8e, 0xd4, 0xb0, 0x80, 0x5e, 0xdd, 0x54, 0x51, 0x97, 0x5b, 0x72, 0x6a, 0x62, 0xd9, 0x1d, 0x94, 0xb9, 0xc2, 0xb2, 0x1a, 0x7b, 0xa3, 0x90, 0xa7, 0xfa, 0x1a, 0x3d, 0x25, 0xfa, 0x6d, 0x5c, 0x4d, 0x51, 0x7d, 0x90, 0xee, 0xf0, 0x7d, 0x1d, 0x44, 0x02, 0x3e, 0x56, 0xf1, 0x19, 0x0c, 0x58, 0x18, 0x44, 0x81, 0x36, 0xa3, 0x41, 0x3c, 0xc7, 0x36, 0x8d, 0x61, 0x07, 0x5b, 0x6a, 0x03, 0x85, 0x57, 0x3d, 0xa0, 0x9d, 0x64, 0x51, 0x5a, 0xa7, 0x59, 0x68, 0x9d, 0x90, 0xd5, 0xe6, 0x81, 0x5e, 0x64, 0xf7, 0xae, 0x27, 0xa3, 0x41, 0x2c, 0x64, 0x1c, 0x20, 0xff, 0x0e, 0x70, 0xc0, 0xf0, 0x29, 0xbd, 0x13, 0x69, 0x72, 0x30, 0xbe, 0x13, 0x6b, 0x1e, 0x25, 0xa1, 0x48, 0x07, 0xf7, 0x50, 0xd4, 0x20, 0x82, 0x2c, 0x42, 0x95, 0x98, 0x77, 0x98, 0x68, 0xe0, 0x89, 0x30, 0x4c, 0x16, 0xb8, 0xba, 0xa3, 0xa3, 0x0b, 0x25, 0xc3, 0x50, 0xf8, 0x77, 0xca, 0xbb, 0xf3, 0xb8, 0x1a, 0xac, 0x56, 0xab, 0x01, 0x5c, 0x42, 0xac, 0x5d, 0x3a, 0x5d, 0x2a, 0xe7, 0x2f, 0x53, 0x05, 0xc9, 0xec, 0xe8, 0x35, 0x65, 0xf8, 0x86, 0x62, 0x48, 0x03, 0xb1, 0x24, 0xaf, 0x24, 0x1f, 0x38, 0x83, 0xd6, 0x9d, 0x2e, 0xf9, 0x25, 0xad, 0xde, 0x69, 0xa9, 0x9a, 0xac, 0x5b, 0xe8, 0xc8, 0xec, 0x48, 0xb0, 0x0b, 0x17, 0x33, 0x44, 0x9f, 0x4f, 0x3b, 0x45, 0xe2, 0xd2, 0x2f, 0x75, 0x48, 0xb9, 0xe6, 0x00, 0x5d, 0xf7, 0xa6, 0xbd, 0x35, 0x94, 0xb4, 0x09, 0xcd, 0xbd, 0xac, 0x14, 0x73, 0xd3, 0xc8, 0xf4, 0xaa, 0x66, 0xff, 0x0a, 0x71, 0xcb, 0x3d, 0xb6, 0x49, 0x7f, 0x9b, 0x63, 0x8f, 0x0c, 0xb1, 0xe3, 0x2d, 0xb0, 0xd9, 0xdd, 0x26, 0x66, 0x3b, 0x7c, 0xc4, 0x16, 0xee, 0x95, 0x57, 0x6d, 0xde, 0x15, 0x6e, 0x45, 0x45, 0x7e, 0xdd, 0xf2, 0x46, 0x52, 0xe4, 0xf3, 0x9a, 0x8f, 0xed, 0x0a, 0x8b, 0x88, 0x62, 0xb3, 0x5c, 0xf3, 0xf3, 0x86, 0xc6, 0x7f, 0x22, 0x4f, 0xeb, 0x63, 0xff, 0xd5, 0x50, 0x3b, 0x35, 0x37, 0x07, 0xad, 0xd3, 0x84, 0x32, 0x30, 0x53, 0x64, 0xee, 0x61, 0x77, 0xeb, 0x4a, 0xcd, 0x4c, 0x5b, 0xe8, 0x6a, 0x42, 0x52, 0x77, 0x6e, 0x15, 0x8d, 0x1b, 0x07, 0xa5, 0x67, 0x23, 0xfa, 0xb7, 0x13, 0xc5, 0x59, 0x18, 0x6e, 0x37, 0x8c, 0x31, 0x76, 0xa1, 0xa7, 0x6d, 0xea, 0x45, 0xbf, 0x9f, 0xb6, 0xe0, 0xb5, 0x40, 0x2e, 0x12, 0x6f, 0x55, 0x2f, 0xf2, 0x32, 0xf1, 0x35, 0x27, 0x23, 0x08, 0xcc, 0x53, 0x93, 0x64, 0xaa, 0xb3, 0x11, 0x69, 0x33, 0x10, 0x36, 0xf2, 0x12, 0x05, 0x57, 0xb0, 0xb3, 0xf7, 0xbf, 0xb1, 0x3d, 0x5b, 0x19, 0xf6, 0x0c, 0x0d, 0x99, 0x04, 0xf7, 0xb9, 0xf3, 0x15, 0x74, 0x4e, 0x81, 0x93, 0x4b, 0x6a, 0x8e, 0x53, 0xe2, 0x24, 0x2b, 0xfa, 0x90, 0x5d, 0xd9, 0xbe, 0x43, 0x07, 0x43, 0xbf, 0x23, 0x36, 0xc5, 0x47, 0x6c, 0xae, 0x37, 0x48, 0xa9, 0x63, 0xf8, 0x32, 0xe9, 0x6d, 0x9d, 0xd4, 0x0f, 0x94, 0x30, 0xd0, 0xa7, 0x48, 0x4b, 0xa4, 0x3a, 0xe5, 0x2c, 0x13, 0xea, 0x77, 0xfe, 0xfe, 0x29, 0xba, 0x1c, 0x65, 0x93, 0xea, 0xec, 0xcb, 0x54, 0x67, 0x75, 0xaa, 0xf5, 0x53, 0xf8, 0x0d, 0x55, 0x90, 0xa6, 0x77, 0x62, 0x9a, 0x95, 0xd3, 0xcb, 0x5a, 0x73, 0xaa, 0x85, 0x50, 0x94, 0x94, 0xf3, 0xd4, 0xc8, 0x12, 0x25, 0xe7, 0x8a, 0xa3, 0x11, 0xba, 0xe7, 0xe8, 0xea, 0x91, 0xa8, 0xd9, 0x61, 0x61, 0xf8, 0xb3, 0x60, 0x36, 0x13, 0x0a, 0x9c, 0xb0, 0xc5, 0x64, 0x25, 0x61, 0x79, 0xdc, 0x7d, 0x12, 0xce, 0xa5, 0x42, 0xb2, 0x8e, 0x0a, 0x7c, 0x1c, 0xff, 0x3d, 0xb0, 0x53, 0x1e, 0x2e, 0xb1, 0xd5, 0xfb, 0x99, 0xa7, 0x36, 0xbb, 0x1b, 0x78, 0x91, 0xdb, 0x91, 0x7d, 0xdd, 0x20, 0x4a, 0xb2, 0x30, 0x45, 0xc7, 0x42, 0x7d, 0x76, 0xa6, 0x84, 0xc9, 0xf4, 0x74, 0xd2, 0x39, 0xb0, 0x32, 0x96, 0xa9, 0x18, 0x2b, 0xb1, 0x6a, 0x71, 0x62, 0xcc, 0x89, 0x8d, 0x00, 0xfd, 0xdc, 0xd6, 0x73, 0x80, 0x49, 0xca, 0x1f, 0xa4, 0xfe, 0x10, 0xac, 0x2f, 0x2a, 0xf7, 0xaf, 0x41, 0xaf, 0x9a, 0xd0, 0xd9, 0x65, 0xb0, 0xbc, 0xbd, 0x30, 0xb5, 0x09, 0x59, 0x77, 0xec, 0x0e, 0x5f, 0x43, 0xbc, 0x6b, 0xb8, 0xb0, 0x5e, 0x28, 0x91, 0x2e, 0x64, 0xe8, 0x33, 0x8e, 0x4a, 0xbf, 0x08, 0x90, 0xed, 0xc8, 0xb3, 0x93, 0x60, 0x29, 0x35, 0xb3, 0xa7, 0xb4, 0xe8, 0x79, 0xb0, 0x0f, 0x6d, 0x54, 0xac, 0xd6, 0xeb, 0x1a, 0xcd, 0x67, 0x8d, 0x13, 0x6e, 0x22, 0xc1, 0x53, 0xac, 0x10, 0xd7, 0xe8, 0xc0, 0xf1, 0xfc, 0x21, 0x25, 0xf5, 0x12, 0xe3, 0xdb, 0x3e, 0x5f, 0x07, 0x4f, 0xf1, 0xe2, 0x2b, 0xfe, 0xc0, 0x66, 0x4a, 0x46, 0x06, 0xfd, 0xa3, 0x41, 0x67, 0xce, 0xed, 0x04, 0x7d, 0x33, 0x3b, 0x61, 0x73, 0x13, 0x91, 0x0a, 0x6b, 0x0a, 0x33, 0x81, 0x16, 0x27, 0x0c, 0x19, 0xd4, 0x8d, 0xe3, 0xfc, 0x27, 0x38, 0x46, 0x52, 0x09, 0x86, 0xf6, 0x82, 0xf8, 0x15, 0xe7, 0x93, 0x7b, 0x29, 0x53, 0x3c, 0x46, 0x49, 0x46, 0x24, 0xd7, 0xd7, 0x9a, 0xba, 0x4f, 0x30, 0x3a, 0x09, 0x51, 0x8d, 0xe9, 0x49, 0x89, 0xa5, 0xc5, 0x26, 0x71, 0xe8, 0xba, 0xfb, 0xa3, 0xf1, 0x0f, 0xdd, 0xaa, 0x5f, 0x00, 0xd5, 0xf5, 0xf9, 0x87, 0x4b, 0xf6, 0xdb, 0xc9, 0xd5, 0xfb, 0x93, 0x37, 0x17, 0xe7, 0xd3, 0x0d, 0xe3, 0x5c, 0x2a, 0x11, 0x91, 0xd5, 0x72, 0x6c, 0x40, 0x70, 0x46, 0xe7, 0x84, 0xd8, 0xd0, 0x75, 0x71, 0x14, 0x6c, 0x06, 0xc9, 0x1b, 0x33, 0x8d, 0x28, 0x2f, 0x68, 0x9d, 0xfe, 0x68, 0xfc, 0xaa, 0x98, 0x6b, 0x3b, 0xc3, 0xab, 0x16, 0x43, 0x73, 0x6e, 0xdc, 0xfd, 0xfb, 0x0c, 0xe1, 0x28, 0xd3, 0x44, 0xe0, 0x14, 0xba, 0x5c, 0x0f, 0x20, 0xd0, 0x8f, 0x01, 0x6e, 0xcb, 0xd1, 0x5f, 0x60, 0x48, 0x9e, 0x37, 0xa5, 0x27, 0x4f, 0x39, 0x43, 0xe2, 0xf8, 0x06, 0x0f, 0x9c, 0xd0, 0xf2, 0x31, 0xf3, 0x44, 0x8a, 0xdd, 0x0f, 0x56, 0xcc, 0x57, 0x74, 0x90, 0xcf, 0x51, 0xc3, 0xac, 0x35, 0x88, 0x23, 0x3e, 0xd0, 0xef, 0x08, 0x3f, 0x4d, 0xfd, 0x22, 0xce, 0xbc, 0x2c, 0xa4, 0xc4, 0x7c, 0x66, 0xa8, 0xae, 0x69, 0xeb, 0x92, 0x2f, 0xcf, 0x87, 0x57, 0xc0, 0xa4, 0x65, 0xa4, 0x7e, 0xb4, 0xd9, 0xb2, 0x24, 0xa7, 0x2a, 0x67, 0x82, 0x89, 0xba, 0x8f, 0x8d, 0xe6, 0x03, 0xcc, 0xdf, 0x4a, 0xb5, 0xe2, 0xca, 0x6f, 0x80, 0x6b, 0x56, 0xa3, 0x53, 0x43, 0x13, 0x93, 0x86, 0x1e, 0x25, 0x16, 0xdb, 0x31, 0x97, 0xce, 0xa7, 0xed, 0xef, 0x3e, 0x4b, 0xe8, 0x89, 0xd9, 0xdb, 0x50, 0x72, 0x6d, 0xf1, 0xba, 0xad, 0xea, 0x54, 0x33, 0xd8, 0x0e, 0x5e, 0x7d, 0x13, 0xed, 0x1f, 0x0b, 0x9e, 0xf5, 0x87, 0x14, 0x4c, 0x20, 0x7d, 0x6c, 0xca, 0x7c, 0x45, 0x7d, 0x65, 0x2a, 0xfe, 0xa6, 0xcc, 0xbb, 0xe7, 0xf9, 0x3a, 0x39, 0xbf, 0x6e, 0xcd, 0xb5, 0x47, 0x1f, 0x90, 0xd4, 0x38, 0x42, 0x6e, 0xb6, 0x1d, 0x16, 0xbb, 0xb5, 0x16, 0xc3, 0x7e, 0x72, 0xa1, 0xa4, 0xc6, 0xf3, 0x83, 0xca, 0x9d, 0x9a, 0x6b, 0xaa, 0xdf, 0xbd, 0xb0, 0x19, 0xd2, 0x9c, 0xab, 0x42, 0xa6, 0x6a, 0xfa, 0xe6, 0x32, 0xea, 0x77, 0x1b, 0x24, 0x75, 0x39, 0x7f, 0x41, 0xcb, 0x04, 0x51, 0x73, 0x37, 0xcb, 0x13, 0x04, 0xce, 0x43, 0xe2, 0xca, 0x93, 0x80, 0xd5, 0x47, 0x69, 0x40, 0x91, 0x98, 0xe3, 0x38, 0x02, 0xe9, 0xc5, 0x62, 0x39, 0x65, 0x00, 0x75, 0xab, 0xba, 0xb2, 0xd3, 0x1d, 0x0d, 0x93, 0x37, 0x61, 0xbe, 0x5b, 0x28, 0x99, 0x2c, 0xd3, 0x3c, 0x20, 0x9c, 0x32, 0x7a, 0xb6, 0x71, 0xcb, 0x55, 0x55, 0x2d, 0xb6, 0x98, 0x9a, 0x96, 0x4a, 0x86, 0xa8, 0xf4, 0x50, 0xf2, 0x21, 0x63, 0x9a, 0x43, 0x70, 0x7e, 0x9f, 0xda, 0x48, 0xe8, 0x62, 0x0f, 0x5e, 0x95, 0x87, 0x2e, 0x3d, 0x6f, 0x31, 0xd6, 0x75, 0xf0, 0x88, 0x0c, 0xd2, 0xb5, 0x91, 0x07, 0x75, 0xe4, 0xa6, 0xd6, 0xaa, 0xc0, 0x44, 0x03, 0x8a, 0xc2, 0x09, 0x3d, 0xd3, 0x9a, 0xac, 0xb9, 0x29, 0xb6, 0x4d, 0x26, 0x69, 0xd8, 0x86, 0xea, 0x17, 0x89, 0x64, 0xe7, 0xaa, 0xad, 0x16, 0xe6, 0xa9, 0xd9, 0x77, 0xbf, 0xb6, 0x80, 0x17, 0x75, 0x1d, 0x37, 0x2d, 0x4d, 0x75, 0xef, 0x8b, 0xdc, 0xae, 0xda, 0xdc, 0xfa, 0x75, 0x76, 0x45, 0xbf, 0x50, 0x6d, 0x0b, 0xac, 0x06, 0xcc, 0x03, 0x45, 0xa7, 0x14, 0xf9, 0x05, 0x1b, 0xbb, 0x2f, 0x5f, 0x76, 0x69, 0x3f, 0xdd, 0xa3, 0xcd, 0xf6, 0x26, 0x0e, 0x79, 0x98, 0xc1, 0xa1, 0xbc, 0x47, 0x55, 0x01, 0xd5, 0xa7, 0x2c, 0xf0, 0x96, 0x33, 0xd5, 0x4c, 0x78, 0x97, 0x92, 0x7e, 0x86, 0xae, 0x92, 0xac, 0x3f, 0xb2, 0x29, 0x70, 0x6c, 0x44, 0xc8, 0x43, 0x07, 0x2d, 0xf5, 0x7b, 0x7a, 0x72, 0x84, 0x92, 0xe7, 0x34, 0xcf, 0x75, 0x4c, 0x77, 0x5c, 0xf5, 0x0a, 0xa8, 0x6d, 0xe6, 0x28, 0x8a, 0xce, 0xd2, 0xf2, 0xeb, 0x5b, 0x9c, 0xf1, 0x41, 0x00, 0xb4, 0xc9, 0x78, 0x0a, 0x45, 0xab, 0xab, 0x7a, 0x61, 0x3a, 0x3c, 0xa1, 0x7f, 0x19, 0xfc, 0x05, 0xe1, 0xd0, 0x59, 0xd7, 0x7d, 0x20, 0x00, 0x00 };

#endif




#if not defined(D6)
#define D0 16
#define D1 5
#define D2 4
#define D3 0
#define D4 2
#define D5 14
#define D6 12
#define D7 13
#define D8 15
#define D9 3
#define D10 1
const char *ssid = "CASA";  //Enter SSID
//const char* ssid = "XT1562 3164"; //Enter SSID
const char *pw = "politecnico";  //Enter Password
#else
const char *ssid = "CASA";       //Enter SSID
const char *pw = "politecnico";  //Enter Password
#endif

#define JOY_ACTIVE_ZONE 25

#define motorPin1_1 D1
#define motorPin1_2 D2
#define motorPin2_1 D5      //D3
#define motorPin2_2 D6      //D4
#define loaderPIN D7        //D6
#define loaderBucketPin D3  //D7

static const char *ssdpTemplate =
  "<?xml version=\"1.0\"?>"
  "<root xmlns=\"urn:schemas-upnp-org:device-1-0\">"
  "<specVersion>"
  "<major>1</major>"
  "<minor>0</minor>"
  "</specVersion>"
  "<URLBase>http://%u.%u.%u.%u/</URLBase>"
  "<device>"
  "<deviceType>upnp:rootdevice</deviceType>"
  "<friendlyName>%s</friendlyName>"
  "<presentationURL>index.html</presentationURL>"
  "<serialNumber>%u</serialNumber>"
  "<modelName>%s</modelName>"
  "<modelNumber>%s</modelNumber>"
  "<modelURL>http://www.espressif.com</modelURL>"
  "<manufacturer>Espressif Systems</manufacturer>"
  "<manufacturerURL>http://www.espressif.com</manufacturerURL>"
  "<UDN>uuid:38323636-4558-4dda-9188-cda0e6%02x%02x%02x</UDN>"
  "</device>"
  "</root>\r\n"
  "\r\n";

using namespace websockets;
WebsocketsServer wsServer;
AsyncWebServer webserver(80);

//ESP8266WebServer auxServer(80);

const char *MyHostname = "skidloader";  //dhcp hostname (if your router supports it) and Domain name for the mDNS responder
//SSDP properties
const char *modelName = "ESP8266";
const char *modelNumber = "929000226503";

int LValue, RValue, commaIndex;

/** ESP32 robot tank with wifi and one joystick web control sketch. 
    Based on SMARS modular robot project using esp32 and tb6612.
    https://www.thingiverse.com/thing:2662828

    for complete complete program: https://github.com/nkmakes/SMARS-esp32

    Made by nkmakes.github.io, August 2020.

    -----------------------------------------
    Camera stream based upon:
    Based on Neil Kolban example for IDF: https://github.com/nkolban/esp32-snippets/blob/master/cpp_utils/tests/BLE%20Tests/SampleNotify.cpp
    Ported to Arduino ESP32 by Evandro Copercini
    Adapted by Manos Zeakis for ESP32 and TB6612FNG
*/












/// ### aux web server for spiffs editor ###

#define FILESYS SPIFFS
#define FILECMD_START
#define FILECMD_END

String getContentType(AsyncWebServerRequest *request, String filename) {
  /* if(webserver.hasArg("download")) return "application/octet-stream"; */
  if (request->hasArg("download")) return "application/octet-stream";
  else if (filename.endsWith(".htm")) return "text/html";
  else if (filename.endsWith(".html")) return "text/html";
  else if (filename.endsWith(".css")) return "text/css";
  else if (filename.endsWith(".js")) return "application/javascript";
  else if (filename.endsWith(".png")) return "image/png";
  else if (filename.endsWith(".gif")) return "image/gif";
  else if (filename.endsWith(".jpg")) return "image/jpeg";
  else if (filename.endsWith(".ico")) return "image/x-icon";
  else if (filename.endsWith(".xml")) return "text/xml";
  else if (filename.endsWith(".pdf")) return "application/x-pdf";
  else if (filename.endsWith(".zip")) return "application/x-zip";
  else if (filename.endsWith(".gz")) return "application/x-gzip";
  return "text/plain";
}


//holds the current upload
File fsUploadFile;

void handleFileUpload(AsyncWebServerRequest *request, String filename, size_t index, uint8_t *data, size_t len, bool final) {
  if (request->url() != "/edit") return;
  if (!index) {
    Serial.printf("UploadStart: %s\n", filename.c_str());
    if (!filename.startsWith("/")) filename = "/" + filename;
    fsUploadFile = FILESYS.open(filename, "w");
  }

  if (fsUploadFile) {
    for (size_t i = 0; i < len; i++) {
      fsUploadFile.write(data[i]);
    }
  }
  if (final) {
    Serial.printf("UploadEnd: %s, %u B\n", filename.c_str(), index + len);
    if (fsUploadFile) {
      fsUploadFile.close();
    }
  }
}


void handleFileDelete(AsyncWebServerRequest *request) {
  if (request->args() == 0) return request->send(500, "text/plain", "BAD ARGS");
  size_t argIdx = 0;
  String path = request->arg(argIdx);
  Serial.printf_P(PSTR("handleFileDelete: %s\r\n"), path.c_str());
  if (path == "/")
    return request->send(500, "text/plain", "BAD PATH");
  FILECMD_START
  if (!FILESYS.exists(path))
    return request->send(404, "text/plain", "FileNotFound");
  FILESYS.remove(path);
  FILECMD_END
  request->send(200, "text/plain", "");
  path = String();
}

void handleFileCreate(AsyncWebServerRequest *request) {
  String status = "";
  int ret;
  if (request->args() == 0)
    return request->send(500, "text/plain", "BAD ARGS");
  size_t argIdx = 0;
  String path = request->arg(argIdx);
  Serial.printf_P(PSTR("handleFileCreate: %s\r\n"), path.c_str());
  if (path == "/")
    return request->send(500, "text/plain", "BAD PATH");
  FILECMD_START;
  if (SPIFFS.exists(path)) {
    status = "FILE EXISTS";
    ret = 500;
  } else {
    File file = SPIFFS.open(path, "w");
    if (file) {
      file.close();
      ret = 200;
    } else {
      status = "CREATE FAILED";
      ret = 500;
    }
  }
  FILECMD_END;
  request->send(ret, "text/plain", status);
}

void handleFileList(AsyncWebServerRequest *request) {
  if (!request->hasArg("dir")) {
    request->send(500, "text/plain", "BAD ARGS");
    return;
  }

  String path = request->arg("dir");
  Serial.printf_P(PSTR("handleFileList: %s\r\n"), path.c_str());
  FILECMD_START
  Dir dir = FILESYS.openDir(path);
  path = String();

  String output = "[";
  while (dir.next()) {
    File entry = dir.openFile("r");
    if (output != "[") output += ',';
    bool isDir = false;
    output += "{\"type\":\"";
    output += (isDir) ? "dir" : "file";
    output += "\",\"name\":\"";
    output += String(entry.name()).substring(1);
    output += "\"}";
    entry.close();
  }
  output += "]";
  FILECMD_END
  request->send(200, "text/json", output);
}

void handleFileSysFormat(AsyncWebServerRequest *request) {
  Serial.println(F("format start"));
  FILECMD_START
  FILESYS.format();
  FILECMD_END
  Serial.println(F("format complete"));
  request->send(200, "text/json", "format complete");
}

/// ### aux web server for spiffs editor ###  -  END








String formatBytes(size_t bytes) {  // convert sizes in bytes to KB and MB
  if (bytes < 1024) {
    return String(bytes) + "B";
  } else if (bytes < (1024 * 1024)) {
    return String(bytes / 1024.0) + "KB";
  } else if (bytes < (1024 * 1024 * 1024)) {
    return String(bytes / 1024.0 / 1024.0) + "MB";
  }
}


void startSPIFFS() {     // Start the SPIFFS and list all contents
  if (!FILESYS.begin())  // Start the SPI Flash File System (SPIFFS)
  {
    Serial.println("SPIFFS begin error!");
    if (FILESYS.format()) {
      FILESYS.begin();
    } else {
      Serial.println(F("No SPIFFS found"));
    }
  }
  Serial.println("SPIFFS started. Contents:");
  {
    Dir dir = FILESYS.openDir("/");
    while (dir.next()) {  // List the file system contents
      String fileName = dir.fileName();
      size_t fileSize = dir.fileSize();
      Serial.printf("\tFS File: %s, size: %s\r\n", fileName.c_str(), formatBytes(fileSize).c_str());
    }
    Serial.printf("\n");
  }
}

bool handleFileRead(AsyncWebServerRequest *request, String path) {  // send the right file to the client (if it exists)
  //String path = request->url();
  Serial.println("handleFileRead: " + path);
  if (path.endsWith("/")) path += "index.html";        // If a folder is requested, send the index file
  String contentType = getContentType(request, path);  // Get the MIME type
  String pathWithGz = path + ".gz";
  if (SPIFFS.exists(pathWithGz) || SPIFFS.exists(path)) {  // If the file exists, either as a compressed archive, or normal
    if (SPIFFS.exists(pathWithGz)) {                         // If there's a compressed version available
      path += ".gz";                                       // Use the compressed verion
    }
    File file = SPIFFS.open(path, "r");                    // Open the file
    // size_t sent = webserver.streamFile(file, contentType);    // Send it to the client
    // request->send(SPIFFS, path, String(), true);
    //Send file as text
    request->send(SPIFFS, path, contentType);
    //Download file
    //request->send(SPIFFS, "/index.htm", String(), true);
    file.close();  // Close the file again
    Serial.println(String("\tSent file: ") + path);
    return true;
  }
  Serial.println(String("\tFile Not Found: ") + path);  // If the file doesn't exist, return false
  return false;
}

void setup() {
  Serial.begin(115200);

  pinMode(motorPin1_1, OUTPUT);
  pinMode(motorPin1_2, OUTPUT);

  pinMode(motorPin2_1, OUTPUT);
  pinMode(motorPin2_2, OUTPUT);

  analogWrite(motorPin1_1, 0);
  analogWrite(motorPin1_2, 0);

  analogWrite(motorPin2_1, 0);
  analogWrite(motorPin2_2, 0);

  analogWriteFreq(200);  // PWM frequency in Hz
  analogWriteRange(255);

  delay(200);

  Serial.println("wifi connecting...");
#ifdef WIFI_AP_ENABLE
  WiFi.softAPConfig(ip, ip, netmask);  // configure ip address for softAP
  WiFi.softAP(ssid, pw);               // configure ssid and password for softAP
#else
  /* Explicitly set the ESP8266 to be a WiFi-client, otherwise, it by default,
     would try to act as both a client and an access-point and could cause
     network-issues with your other WiFi-devices on your WiFi-network. */
  WiFi.disconnect();
  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, pw);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
  }
#endif

  WiFi.hostname(MyHostname);

  Serial.println(WiFi.localIP());


  startSPIFFS();



  // HTTP handler assignment
  //webserver.on("/", HTTP_GET, [](AsyncWebServerRequest *request) {
  //  AsyncWebServerResponse *response = request->beginResponse_P(200, "text/html", index_html_gz, sizeof(index_html_gz));
  //  response->addHeader("Content-Encoding", "gzip");
  //  request->send(response);
  //});

  // Route for root / web page
   webserver.on("/", HTTP_GET, [](AsyncWebServerRequest *request){
     request->send(SPIFFS, "/index.html", String(), false, processor);
   });

  webserver.onNotFound([](AsyncWebServerRequest *request) {
    Serial.print("onNotFound ");
    Serial.println(request->url().c_str());
    if (!handleFileRead(request, request->url())) {  // check if the file exists in the flash memory (SPIFFS), if so, send it
      request->send(404, "text/plain", "404: File Not Found");
    }
  });






  ///////////////

  // send a file when /index is requested
  webserver.on("/format", HTTP_ANY, handleFileSysFormat);

  webserver.on("/list", HTTP_GET, handleFileList);
  //load editor
  webserver.on("/edit", HTTP_GET, [](AsyncWebServerRequest *request) {
    Serial.println("on edit GET");
    if (!handleFileRead(request, "/edit.htm")) request->send(404, "text/plain", "FileNotFound");
  });
  //create file
  webserver.on("/edit", HTTP_PUT, handleFileCreate);
  //delete file
  webserver.on("/edit", HTTP_DELETE, handleFileDelete);


  webserver.on(
    "/edit", HTTP_POST, [](AsyncWebServerRequest *request) {
      Serial.println("on edit POST");
      request->send(200);
    },
    handleFileUpload);

  /////////////////



  AsyncElegantOTA.begin(&webserver);  // Start ElegantOTA


  // Cache responses for 10 minutes (600 seconds)
  webserver.serveStatic("/", SPIFFS, "/").setCacheControl("max-age=600");
  // start server
  webserver.begin();
  wsServer.listen(82);
  Serial.print("Is server live? ");

  MDNS.begin(MyHostname);  // start the multicast domain name server
  Serial.print("mDNS responder started: http://");
  Serial.print(MyHostname);
  Serial.println(".local");

  //NBNS.begin(MyHostname);
#if 0
 Serial.printf("Starting SSDP...\n");
    SSDP.setSchemaURL("description.xml");
    SSDP.setHTTPPort(80);
    SSDP.setName("Philips hue clone");
    SSDP.setSerialNumber("001788102201");
    SSDP.setURL("index.html");
    SSDP.setModelName("Philips hue bridge 2012");
    SSDP.setModelNumber("929000226503");
    SSDP.setModelURL("http://www.meethue.com");
    SSDP.setManufacturer("Royal Philips Electronics");
    SSDP.setManufacturerURL("http://www.philips.com");
    SSDP.begin();

    webserver.on("/description.xml", HTTP_GET, [](AsyncWebServerRequest *request){
      StreamString output;
      if(output.reserve(1024)){
        uint32_t ip = WiFi.localIP();
        uint32_t chipId = ESP.getChipId();
        output.printf(ssdpTemplate,
          IP2STR(&ip),
          MyHostname,
          chipId,
          modelName,
          modelNumber,
          (uint8_t) ((chipId >> 16) & 0xff),
          (uint8_t) ((chipId >>  8) & 0xff),
          (uint8_t)   chipId        & 0xff
        );
        request->send(200, "text/xml", (String)output);
      } else {
        request->send(500);
      }
  });
#endif
}


// handle http messages
void handle_message(WebsocketsMessage msg) {
  commaIndex = msg.data().indexOf(',');
  //swap Left and righ, why ????
  RValue = msg.data().substring(0, commaIndex).toInt();   // range +255 ... -255
  LValue = msg.data().substring(commaIndex + 1).toInt();  // range +255 ... -255

  //****** motor1.drive(LValue);
  //******  motor2.drive(RValue);
  if (RValue > JOY_ACTIVE_ZONE) {
    analogWrite(motorPin1_1, RValue);
    analogWrite(motorPin1_2, 0);
    //direction_ascii_char_right = '>'; // ascii code for upper arrow
  } else if (RValue < -JOY_ACTIVE_ZONE) {
    analogWrite(motorPin1_1, 0);
    analogWrite(motorPin1_2, -RValue);
    // direction_ascii_char_right = '<'; // ascii code for down arrow
  } else {
    digitalWrite(motorPin1_1, 0);
    digitalWrite(motorPin1_2, 0);
  }

  if (LValue > JOY_ACTIVE_ZONE) {
    analogWrite(motorPin2_1, LValue);
    analogWrite(motorPin2_2, 0);
    //  direction_ascii_char_left = '<'; // ascii code for down arrow

  } else if (LValue < -JOY_ACTIVE_ZONE) {

    analogWrite(motorPin2_1, 0);
    analogWrite(motorPin2_2, -LValue);
    // direction_ascii_char_left = '>'; // ascii code for upper arrow
  } else {
    digitalWrite(motorPin2_1, 0);
    digitalWrite(motorPin2_2, 0);
  }

  TRACE("M1: ");
  TRACE(LValue);
  TRACE(" M2: ");
  TRACELN(RValue);
}

void loop() {
  // webserver.handleClient();
  auto client = wsServer.accept();
  client.onMessage(handle_message);
  while (client.available()) {
    client.poll();
  }
}